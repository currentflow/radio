const e=location.pathname.split("/").slice(0,-1).join("/"),p=[e+"/_app/immutable/entry/app.tAE7lphP.js",e+"/_app/immutable/nodes/0.BFKsTCrO.js",e+"/_app/immutable/assets/0.D0zzrWjn.css",e+"/_app/immutable/nodes/1.Ch1G1i5J.js",e+"/_app/immutable/assets/1.hUOVjyLt.css",e+"/_app/immutable/nodes/2.LGm_D_J8.js",e+"/_app/immutable/assets/2.BPSzBtPr.css",e+"/_app/immutable/chunks/entry.CWYxF7t7.js",e+"/_app/immutable/chunks/environment.Beef-JCX.js",e+"/_app/immutable/chunks/index.n7Naqpnh.js",e+"/_app/immutable/chunks/scheduler.CJWTc6H_.js",e+"/_app/immutable/entry/start.BdALX38N.js"],l=[e+"/.nojekyll",e+"/favicon.png",e+"/favicon.svg",e+"/icon-192.png",e+"/icon-512.png",e+"/icon-96.png",e+"/manifest.json",e+"/robots.txt"],m="0.1.0",n=`cache-${m}`,c=[...p,...l];self.addEventListener("install",s=>{async function t(){await(await caches.open(n)).addAll(c)}s.waitUntil(t())});self.addEventListener("activate",s=>{async function t(){for(const a of await caches.keys())a!==n&&await caches.delete(a)}s.waitUntil(t())});self.addEventListener("fetch",s=>{if(s.request.destination==="audio"||s.request.method!=="GET")return;async function t(){const a=new URL(s.request.url),o=await caches.open(n);if(c.includes(a.pathname)){const i=await o.match(a.pathname);if(i)return i}}s.respondWith(t())});
