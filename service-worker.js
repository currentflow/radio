const e=location.pathname.split("/").slice(0,-1).join("/"),p=[e+"/_app/immutable/entry/app.B-fyjZQq.js",e+"/_app/immutable/nodes/0.B6Dn5ff9.js",e+"/_app/immutable/assets/0.DUu-NZjz.css",e+"/_app/immutable/nodes/1.BQl2RHxC.js",e+"/_app/immutable/assets/1.hUOVjyLt.css",e+"/_app/immutable/nodes/2.4mmIPfJQ.js",e+"/_app/immutable/assets/2.Dx9cLJIf.css",e+"/_app/immutable/chunks/entry.ACmWHvCk.js",e+"/_app/immutable/chunks/index.UHM3_mEL.js",e+"/_app/immutable/chunks/index.n7Naqpnh.js",e+"/_app/immutable/chunks/scheduler.CJWTc6H_.js",e+"/_app/immutable/chunks/stores.Cz0XDojb.js",e+"/_app/immutable/entry/start.BcREBYVt.js"],u=[e+"/.nojekyll",e+"/favicon.png",e+"/favicon.svg",e+"/icon-192.png",e+"/icon-512.png",e+"/icon-96.png",e+"/manifest.json",e+"/robots.txt"],m="1712866023958",c=`cache-${m}`;console.log("cache name",c);const l=[...p,...u];self.addEventListener("install",s=>{console.log("Service worker installed");async function a(){await(await caches.open(c)).addAll(l)}s.waitUntil(a())});self.addEventListener("activate",s=>{console.log("Service worker activated");async function a(){for(const n of await caches.keys())n!==c&&await caches.delete(n)}s.waitUntil(a())});self.addEventListener("fetch",s=>{const a=new URL(s.request.url);if(console.log("Service worker Fetch Event"),s.request.method!=="GET")return;if(!a.host.startsWith("https://currentflow.github.io/radio/")){console.log("fetching outside resource");return}async function n(){const i=new URL(s.request.url),o=await caches.open(c);if(l.includes(i.pathname)){const t=await o.match(i.pathname);if(t)return t}try{const t=await fetch(s.request);if(!(t instanceof Response))throw new Error("invalid response from fetch");return t.status===200&&o.put(s.request,t.clone()),t}catch(t){const r=await o.match(s.request);if(r)return r;throw t}}s.respondWith(n())});
