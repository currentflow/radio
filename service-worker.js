const e=location.pathname.split("/").slice(0,-1).join("/"),l=[e+"/_app/immutable/entry/app.eL0v5RPr.js",e+"/_app/immutable/nodes/0.zVGlT4t0.js",e+"/_app/immutable/assets/0.DUu-NZjz.css",e+"/_app/immutable/nodes/1.CBXOU9Ny.js",e+"/_app/immutable/assets/1.hUOVjyLt.css",e+"/_app/immutable/nodes/2.By0WKVs5.js",e+"/_app/immutable/assets/2.Dx9cLJIf.css",e+"/_app/immutable/chunks/entry.MnMFrXS4.js",e+"/_app/immutable/chunks/index.UHM3_mEL.js",e+"/_app/immutable/chunks/index.n7Naqpnh.js",e+"/_app/immutable/chunks/scheduler.CJWTc6H_.js",e+"/_app/immutable/entry/start.Bmtfd4xR.js"],p=[e+"/.nojekyll",e+"/favicon.png",e+"/favicon.svg",e+"/icon-192.png",e+"/icon-512.png",e+"/icon-96.png",e+"/manifest.json",e+"/robots.txt"],m="1712868455504",n=`cache-${m}`;console.log("cache name",n);const i=[...l,...p];self.addEventListener("install",a=>{console.log("Service worker installed");async function t(){await(await caches.open(n)).addAll(i)}a.waitUntil(t())});self.addEventListener("activate",a=>{console.log("Service worker activated");async function t(){for(const s of await caches.keys())s!==n&&await caches.delete(s)}a.waitUntil(t())});self.addEventListener("fetch",a=>{if(a.request.method!=="GET")return;async function t(){const s=new URL(a.request.url),o=await caches.open(n);if(i.includes(s.pathname)){const c=await o.match(s.pathname);if(c)return c}}a.respondWith(t())});
