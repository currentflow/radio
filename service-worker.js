const s=location.pathname.split("/").slice(0,-1).join("/"),r=[s+"/_app/immutable/entry/app.Cu2ajT2t.js",s+"/_app/immutable/nodes/0.zVGlT4t0.js",s+"/_app/immutable/assets/0.DUu-NZjz.css",s+"/_app/immutable/nodes/1.DRPBPgRQ.js",s+"/_app/immutable/assets/1.hUOVjyLt.css",s+"/_app/immutable/nodes/2.mBlds7Zd.js",s+"/_app/immutable/assets/2.Dx9cLJIf.css",s+"/_app/immutable/chunks/entry.DsbmbtX1.js",s+"/_app/immutable/chunks/index.UHM3_mEL.js",s+"/_app/immutable/chunks/index.n7Naqpnh.js",s+"/_app/immutable/chunks/scheduler.CJWTc6H_.js",s+"/_app/immutable/entry/start.DHh2Wyra.js"],l=[s+"/.nojekyll",s+"/favicon.png",s+"/favicon.svg",s+"/icon-192.png",s+"/icon-512.png",s+"/icon-96.png",s+"/manifest.json",s+"/robots.txt"],u="1712856779792",i=`cache-${u}`,p=[...r,...l];self.addEventListener("install",e=>{async function n(){await(await caches.open(i)).addAll(p)}e.waitUntil(n())});self.addEventListener("activate",e=>{async function n(){for(const a of await caches.keys())a!==i&&await caches.delete(a)}e.waitUntil(n())});self.addEventListener("fetch",e=>{if(e.request.method!=="GET")return;async function n(){const a=new URL(e.request.url),c=await caches.open(i);if(p.includes(a.pathname)){const t=await c.match(a.pathname);if(t)return t}try{const t=await fetch(e.request);if(!(t instanceof Response))throw new Error("invalid response from fetch");return t.status===200&&c.put(e.request,t.clone()),t}catch(t){const o=await c.match(e.request);if(o)return o;throw t}}e.respondWith(n())});
