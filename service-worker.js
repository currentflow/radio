const e=location.pathname.split("/").slice(0,-1).join("/"),l=[e+"/_app/immutable/entry/app.BuMv9AHp.js",e+"/_app/immutable/nodes/0.zVGlT4t0.js",e+"/_app/immutable/assets/0.DUu-NZjz.css",e+"/_app/immutable/nodes/1.BW4sFGOB.js",e+"/_app/immutable/assets/1.hUOVjyLt.css",e+"/_app/immutable/nodes/2.4mmIPfJQ.js",e+"/_app/immutable/assets/2.Dx9cLJIf.css",e+"/_app/immutable/chunks/entry.B4KzMSRQ.js",e+"/_app/immutable/chunks/index.UHM3_mEL.js",e+"/_app/immutable/chunks/index.n7Naqpnh.js",e+"/_app/immutable/chunks/scheduler.CJWTc6H_.js",e+"/_app/immutable/entry/start.CUfEPLZK.js"],p=[e+"/.nojekyll",e+"/favicon.png",e+"/favicon.svg",e+"/icon-192.png",e+"/icon-512.png",e+"/icon-96.png",e+"/manifest.json",e+"/robots.txt"],r="1712867170403",n=`cache-${r}`;console.log("cache name",n);const i=[...l,...p];self.addEventListener("install",s=>{console.log("Service worker installed");async function t(){await(await caches.open(n)).addAll(i)}s.waitUntil(t())});self.addEventListener("activate",s=>{console.log("Service worker activated");async function t(){for(const a of await caches.keys())a!==n&&await caches.delete(a)}s.waitUntil(t())});self.addEventListener("fetch",s=>{if(s.request.method!=="GET")return;async function t(){const a=new URL(s.request.url),o=await caches.open(n);if(i.includes(a.pathname)){const c=await o.match(a.pathname);if(c)return c}if(!a.pathname.startsWith("/radio/")){console.log("fetching outside resource"),s.respondWith(fetch(s.request));return}}s.respondWith(t())});
